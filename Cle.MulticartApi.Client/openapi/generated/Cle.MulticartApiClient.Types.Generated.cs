//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#nullable enable

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"

namespace Cle.MulticartApi.Client.Types
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface ICartItemClient
    {

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get cart item by id
        /// </summary>
        /// <remarks>
        /// Retrieves cart item by unique id
        /// </remarks>
        /// <param name="id">Id of cart item</param>
        /// <returns>Returns cart item</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse<CartItemGet>> CartItemGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update cart item
        /// </summary>
        /// <remarks>
        /// Update cart item by id (all fields will be changed)
        /// </remarks>
        /// <param name="id">Cart item id for update</param>
        /// <param name="input">Cart item data</param>
        /// <returns>Ok. No returns</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> CartItemPutAsync(System.Guid id, CartItemBody input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Patch cart item by id
        /// </summary>
        /// <remarks>
        /// Patch cart item by id (only the fields provided in the request will be changed)
        /// </remarks>
        /// <param name="id">Cart item id for patch</param>
        /// <param name="input">Cart item data</param>
        /// <returns>Ok. No returns</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> CartItemPatchAsync(System.Guid id, CartItemPatch input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete cart item
        /// </summary>
        /// <remarks>
        /// Delete cart item
        /// </remarks>
        /// <param name="id">Cart item id to delete</param>
        /// <returns>Ok. No returns</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> CartItemDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get cart items for user (paged)
        /// </summary>
        /// <remarks>
        /// Retrieves cart items by pages applying filter (platform, seller, usItemId)
        /// </remarks>
        /// <param name="platform">Platform type</param>
        /// <param name="seller">Seller</param>
        /// <param name="usItemId">Unique for seller product id</param>
        /// <param name="pageSize">Page size (from 1 to 50, default 20)</param>
        /// <param name="dir">Direction of paging</param>
        /// <param name="pageToken">Current position token (from previous page response)</param>
        /// <returns>Returns cart items list</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse<CartItemPagingResponse>> CartItemGetAsync(EnPlatformType? platform = null, string? seller = null, string? usItemId = null, int? pageSize = null, EnPageDirection? dir = null, string? pageToken = null, System.Collections.Generic.IEnumerable<string>? includedProperties = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Add cart item
        /// </summary>
        /// <remarks>
        /// Add cart item for user
        /// </remarks>
        /// <param name="input">Cart item to add</param>
        /// <returns>Returns the newly created cart item id</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse<ResultGuid>> CartItemPostAsync(CartItemBody input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IOfferClient
    {

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get offer by id
        /// </summary>
        /// <remarks>
        /// Retrieves offer by unique id
        /// </remarks>
        /// <param name="id">Id of the offer</param>
        /// <returns>Returns offer</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse<OfferGet>> OfferGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update offer
        /// </summary>
        /// <remarks>
        /// Update offer by id (all fields will be changed)
        /// </remarks>
        /// <param name="id">Offer id for update</param>
        /// <param name="input">Offer data</param>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> OfferPutAsync(System.Guid id, OfferPost input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Patch offer
        /// </summary>
        /// <remarks>
        /// Patch offer by id (only the fields provided in the request will be changed)
        /// </remarks>
        /// <param name="id">Offer id for patch</param>
        /// <param name="input">Offer data</param>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> OfferPatchAsync(System.Guid id, OfferPatch input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete offer
        /// </summary>
        /// <remarks>
        /// Delete offer with id
        /// </remarks>
        /// <param name="id">Offer id to delete</param>
        /// <returns>Ok. No returns</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> OfferDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get offers for user (paged)
        /// </summary>
        /// <remarks>
        /// Retrieves offers by pages applying filters (name or group id)
        /// </remarks>
        /// <param name="name">Offer name</param>
        /// <param name="groupId">Offer group id</param>
        /// <param name="pageSize">Page size (from 1 to 50, default 20)</param>
        /// <param name="dir">Direction of paging</param>
        /// <param name="pageToken">Current position token (from previous page response)</param>
        /// <returns>Returns offers list</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse<OfferPagingResponse>> OfferGetAsync(string? name = null, System.Guid? groupId = null, int? pageSize = null, EnPageDirection? dir = null, string? pageToken = null, System.Collections.Generic.IEnumerable<string>? includedProperties = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Create new offer
        /// </summary>
        /// <param name="input">Offer to add</param>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> OfferPostAsync(OfferPost input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial interface IAdminCartItemClient
    {

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get cart item by id
        /// </summary>
        /// <remarks>
        /// Retrieves cart item by unique id
        /// </remarks>
        /// <param name="id">Id of cart item</param>
        /// <returns>Returns the newly created cart item</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse<CartItemGetAdmin>> CartItemGetAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Update cart item
        /// </summary>
        /// <remarks>
        /// Update cart item by id (all fields will be changed)
        /// </remarks>
        /// <param name="id">Cart item id for update</param>
        /// <param name="input">Cart item data</param>
        /// <returns>Ok. No returns</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> CartItemPutAsync(System.Guid id, CartItemBody input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Patch cart item by id
        /// </summary>
        /// <remarks>
        /// Patch cart item by id (only the fields provided in the request will be changed)
        /// </remarks>
        /// <param name="id">Cart item id for update</param>
        /// <param name="input">Cart item data</param>
        /// <returns>Ok. No returns</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> CartItemPatchAsync(System.Guid id, CartItemPatch input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Delete cart item
        /// </summary>
        /// <remarks>
        /// Delete cart item
        /// </remarks>
        /// <param name="id">Cart item id to delete</param>
        /// <returns>Ok. No returns</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse> CartItemDeleteAsync(System.Guid id, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Get cart items for user (paged)
        /// </summary>
        /// <remarks>
        /// Retrieves cart items by pages applying filter (platform, seller, usItemId)
        /// </remarks>
        /// <param name="userId">Multicart owner user id</param>
        /// <param name="platform">Platform type</param>
        /// <param name="seller">Seller</param>
        /// <param name="usItemId">Unique for seller product id</param>
        /// <param name="pageSize">Page size (from 1 to 50, default 20)</param>
        /// <param name="dir">Direction of paging</param>
        /// <param name="pageToken">Current position token (from previous page response)</param>
        /// <returns>Returns cart items list</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse<CartItemPagingResponse>> CartItemGetAsync(string? userId = null, EnPlatformType? platform = null, string? seller = null, string? usItemId = null, int? pageSize = null, EnPageDirection? dir = null, string? pageToken = null, System.Collections.Generic.IEnumerable<string>? includedProperties = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        /// <summary>
        /// Add cart item
        /// </summary>
        /// <remarks>
        /// Add crt item for user
        /// </remarks>
        /// <param name="input">Cart item to add</param>
        /// <returns>Returns the newly created cart item id</returns>
        /// <exception cref="MulticartApiClientException">A server side error occurred.</exception>
        System.Threading.Tasks.Task<MulticartClientResponse<ResultGuid>> CartItemPostAsync(CartItemBodyAdmin input, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

    }

    /// <summary>
    /// Cart item
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CartItemGet : CartItemBody
    {
        private System.Guid? _id = default!;
        private System.Guid? _platformId = default!;

        /// <summary>
        /// Unique id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Id
        {
            get { return _id; }

            set
            {
                if (_id != value)
                {
                    _id = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Unique e-commerce platform guid
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("platformId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? PlatformId
        {
            get { return _platformId; }

            set
            {
                if (_platformId != value)
                {
                    _platformId = value;
                    RaisePropertyChanged();
                }
            }
        }

    }

    /// <summary>
    /// Cart item
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CartItemBody : System.ComponentModel.INotifyPropertyChanged
    {
        private string? _usItemId = default!;
        private string? _seller = default!;
        private string? _productId = default!;
        private string? _name = default!;
        private string? _description = default!;
        private string? _url = default!;
        private System.Collections.Generic.ICollection<string>? _imagesUrls = default!;
        private string? _smallImageUrl = default!;
        private System.Collections.Generic.ICollection<Variant>? _variants = default!;
        private System.Collections.Generic.ICollection<VariantCategory>? _variantCategories = default!;
        private PriceData? _priceInfo = default!;
        private bool? _available = default!;
        private EnPlatformType? _platform = default!;
        private string? _platformData = default!;
        private System.Collections.Generic.ICollection<string>? _productCategories = default!;
        private string? _gtin = default!;
        private string? _mpn = default!;
        private string? _brand = default!;

        /// <summary>
        /// Unique item id on target e-commerce platform
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("usItemId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? UsItemId
        {
            get { return _usItemId; }

            set
            {
                if (_usItemId != value)
                {
                    _usItemId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Seller host on target e-commerce platform
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("seller")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Seller
        {
            get { return _seller; }

            set
            {
                if (_seller != value)
                {
                    _seller = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product id on target e-commerce platform
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ProductId
        {
            get { return _productId; }

            set
            {
                if (_productId != value)
                {
                    _productId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Name
        {
            get { return _name; }

            set
            {
                if (_name != value)
                {
                    _name = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product description 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Description
        {
            get { return _description; }

            set
            {
                if (_description != value)
                {
                    _description = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Url of product page on target e-commerce platform 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Url
        {
            get { return _url; }

            set
            {
                if (_url != value)
                {
                    _url = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Urls of product images
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("imagesUrls")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string>? ImagesUrls
        {
            get { return _imagesUrls; }

            set
            {
                if (_imagesUrls != value)
                {
                    _imagesUrls = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Small image url to display on product thumb
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("smallImageUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? SmallImageUrl
        {
            get { return _smallImageUrl; }

            set
            {
                if (_smallImageUrl != value)
                {
                    _smallImageUrl = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// "Selected variants for target product"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variants")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Variant>? Variants
        {
            get { return _variants; }

            set
            {
                if (_variants != value)
                {
                    _variants = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// "Available variants for target product grouped by categories"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variantCategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<VariantCategory>? VariantCategories
        {
            get { return _variantCategories; }

            set
            {
                if (_variantCategories != value)
                {
                    _variantCategories = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// "Product price data"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("priceInfo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public PriceData? PriceInfo
        {
            get { return _priceInfo; }

            set
            {
                if (_priceInfo != value)
                {
                    _priceInfo = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// "Product availability"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("available")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Available
        {
            get { return _available; }

            set
            {
                if (_available != value)
                {
                    _available = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Target e-commerce platform name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("platform")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public EnPlatformType? Platform
        {
            get { return _platform; }

            set
            {
                if (_platform != value)
                {
                    _platform = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Serialized specific platform product data usually in JSON format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("platformData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? PlatformData
        {
            get { return _platformData; }

            set
            {
                if (_platformData != value)
                {
                    _platformData = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Categories in which the product belongs
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productCategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string>? ProductCategories
        {
            get { return _productCategories; }

            set
            {
                if (_productCategories != value)
                {
                    _productCategories = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// International marking code. UPC, GTIN-12, GTIN-13, GTIN-14 or ISBN
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("gtin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Gtin
        {
            get { return _gtin; }

            set
            {
                if (_gtin != value)
                {
                    _gtin = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product manufacturer code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mpn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Mpn
        {
            get { return _mpn; }

            set
            {
                if (_mpn != value)
                {
                    _mpn = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product brand
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Brand
        {
            get { return _brand; }

            set
            {
                if (_brand != value)
                {
                    _brand = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Product variant
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class Variant : System.ComponentModel.INotifyPropertyChanged
    {
        private string? _variantId = default!;
        private string? _variantName = default!;
        private string? _categoryId = default!;
        private string? _categoryName = default!;
        private bool? _outOfStock = default!;
        private string? _swatch = default!;
        private string? _color = default!;
        private string? _customInput = default!;

        /// <summary>
        /// Unique variant Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variantId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? VariantId
        {
            get { return _variantId; }

            set
            {
                if (_variantId != value)
                {
                    _variantId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Display variant name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variantName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? VariantName
        {
            get { return _variantName; }

            set
            {
                if (_variantName != value)
                {
                    _variantName = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// ID of the category to which the option belongs
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categoryId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? CategoryId
        {
            get { return _categoryId; }

            set
            {
                if (_categoryId != value)
                {
                    _categoryId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Name of the category to which the option belongs
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categoryName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? CategoryName
        {
            get { return _categoryName; }

            set
            {
                if (_categoryName != value)
                {
                    _categoryName = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Flag is selected variant is out of stock
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("outOfStock")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? OutOfStock
        {
            get { return _outOfStock; }

            set
            {
                if (_outOfStock != value)
                {
                    _outOfStock = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Swatch url of variant
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("swatch")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Swatch
        {
            get { return _swatch; }

            set
            {
                if (_swatch != value)
                {
                    _swatch = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Color of variant
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("color")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Color
        {
            get { return _color; }

            set
            {
                if (_color != value)
                {
                    _color = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Customized text for variant
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customInput")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? CustomInput
        {
            get { return _customInput; }

            set
            {
                if (_customInput != value)
                {
                    _customInput = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Category with variants for cart item
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VariantCategory : System.ComponentModel.INotifyPropertyChanged
    {
        private string? _id = default!;
        private string? _name = default!;
        private System.Collections.Generic.ICollection<Variant>? _variants = default!;
        private VariantCategoryOptions? _options = default!;
        private bool? _optional = default!;

        /// <summary>
        /// Unique category Id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Id
        {
            get { return _id; }

            set
            {
                if (_id != value)
                {
                    _id = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Display name of variants category
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Name
        {
            get { return _name; }

            set
            {
                if (_name != value)
                {
                    _name = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Array of category variants
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variants")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Variant>? Variants
        {
            get { return _variants; }

            set
            {
                if (_variants != value)
                {
                    _variants = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Category options
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("options")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public VariantCategoryOptions? Options
        {
            get { return _options; }

            set
            {
                if (_options != value)
                {
                    _options = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Input value is optional
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("optional")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Optional
        {
            get { return _optional; }

            set
            {
                if (_optional != value)
                {
                    _optional = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Variant category options
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class VariantCategoryOptions : System.ComponentModel.INotifyPropertyChanged
    {
        private VariantCategoryDisplayType? _categoryDisplayType = default!;
        private VariantDisplayType? _variantDisplayType = default!;
        private string? _description = default!;

        /// <summary>
        /// Category display type
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("categoryDisplayType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public VariantCategoryDisplayType? CategoryDisplayType
        {
            get { return _categoryDisplayType; }

            set
            {
                if (_categoryDisplayType != value)
                {
                    _categoryDisplayType = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Variant display type
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variantDisplayType")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public VariantDisplayType? VariantDisplayType
        {
            get { return _variantDisplayType; }

            set
            {
                if (_variantDisplayType != value)
                {
                    _variantDisplayType = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Category description for tooltip
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Description
        {
            get { return _description; }

            set
            {
                if (_description != value)
                {
                    _description = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Category display type
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum VariantCategoryDisplayType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Default")]
        Default = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Dropdown")]
        Dropdown = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Radio")]
        Radio = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"CustomInput")]
        CustomInput = 3,

    }

    /// <summary>
    /// Variant display type
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum VariantDisplayType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Default")]
        Default = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Name")]
        Name = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Swatch")]
        Swatch = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Color")]
        Color = 3,

    }

    /// <summary>
    /// Price data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PriceData : System.ComponentModel.INotifyPropertyChanged
    {
        private string? _unit = default!;
        private string? _symbol = default!;
        private double? _currentValue = default!;
        private double? _regularValue = default!;
        private System.DateTimeOffset? _salePriceEffectiveDate = default!;

        /// <summary>
        /// Currency unit as "USD" for United States dollar
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("unit")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Unit
        {
            get { return _unit; }

            set
            {
                if (_unit != value)
                {
                    _unit = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Currency symbol as "$"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("symbol")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Symbol
        {
            get { return _symbol; }

            set
            {
                if (_symbol != value)
                {
                    _symbol = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Current product price. Maybe sale value or equal regular value
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("currentValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? CurrentValue
        {
            get { return _currentValue; }

            set
            {
                if (_currentValue != value)
                {
                    _currentValue = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Regular product price. 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("regularValue")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? RegularValue
        {
            get { return _regularValue; }

            set
            {
                if (_regularValue != value)
                {
                    _regularValue = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Date until which the sale is valid
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("salePriceEffectiveDate")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? SalePriceEffectiveDate
        {
            get { return _salePriceEffectiveDate; }

            set
            {
                if (_salePriceEffectiveDate != value)
                {
                    _salePriceEffectiveDate = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum EnPlatformType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Walmart")]
        Walmart = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Shopify")]
        Shopify = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"Target")]
        Target = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"Farfetch")]
        Farfetch = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"Adidas")]
        Adidas = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"Michaels")]
        Michaels = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"Fanatics")]
        Fanatics = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"Pandora")]
        Pandora = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"Carters")]
        Carters = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"Justice")]
        Justice = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"Nordstrom")]
        Nordstrom = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"Macys")]
        Macys = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"Ulta")]
        Ulta = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"Sephora")]
        Sephora = 13,

        [System.Runtime.Serialization.EnumMember(Value = @"Kohls")]
        Kohls = 14,

        [System.Runtime.Serialization.EnumMember(Value = @"Bestbuy")]
        Bestbuy = 15,

        [System.Runtime.Serialization.EnumMember(Value = @"NetAPorter")]
        NetAPorter = 16,

        [System.Runtime.Serialization.EnumMember(Value = @"BedBathAndBeyond")]
        BedBathAndBeyond = 17,

        [System.Runtime.Serialization.EnumMember(Value = @"Gap")]
        Gap = 18,

        [System.Runtime.Serialization.EnumMember(Value = @"HomeDepot")]
        HomeDepot = 19,

        [System.Runtime.Serialization.EnumMember(Value = @"Lowes")]
        Lowes = 20,

        [System.Runtime.Serialization.EnumMember(Value = @"GapFactory")]
        GapFactory = 21,

        [System.Runtime.Serialization.EnumMember(Value = @"Patagonia")]
        Patagonia = 22,

        [System.Runtime.Serialization.EnumMember(Value = @"DicksSportingGoods")]
        DicksSportingGoods = 23,

        [System.Runtime.Serialization.EnumMember(Value = @"PetSmart")]
        PetSmart = 24,

        [System.Runtime.Serialization.EnumMember(Value = @"ShopDisney")]
        ShopDisney = 25,

        [System.Runtime.Serialization.EnumMember(Value = @"Elfcosmetics")]
        Elfcosmetics = 26,

        [System.Runtime.Serialization.EnumMember(Value = @"Shift4Shop")]
        Shift4Shop = 27,

        [System.Runtime.Serialization.EnumMember(Value = @"DallasCowboys")]
        DallasCowboys = 28,

        [System.Runtime.Serialization.EnumMember(Value = @"AtHome")]
        AtHome = 29,

        [System.Runtime.Serialization.EnumMember(Value = @"VictoriasSecret")]
        VictoriasSecret = 30,

        [System.Runtime.Serialization.EnumMember(Value = @"Nike")]
        Nike = 31,

        [System.Runtime.Serialization.EnumMember(Value = @"Amazon")]
        Amazon = 32,

        [System.Runtime.Serialization.EnumMember(Value = @"AthomeMedline")]
        AthomeMedline = 33,

        [System.Runtime.Serialization.EnumMember(Value = @"CombatCorner")]
        CombatCorner = 34,

        [System.Runtime.Serialization.EnumMember(Value = @"Explorecuisine")]
        Explorecuisine = 35,

        [System.Runtime.Serialization.EnumMember(Value = @"Huel")]
        Huel = 36,

        [System.Runtime.Serialization.EnumMember(Value = @"BestbuyCanada")]
        BestbuyCanada = 37,

        [System.Runtime.Serialization.EnumMember(Value = @"BigCommerce")]
        BigCommerce = 38,

        [System.Runtime.Serialization.EnumMember(Value = @"DallasGolf")]
        DallasGolf = 39,

        [System.Runtime.Serialization.EnumMember(Value = @"GrandvinWineMerchants")]
        GrandvinWineMerchants = 40,

        [System.Runtime.Serialization.EnumMember(Value = @"Yamaha")]
        Yamaha = 41,

        [System.Runtime.Serialization.EnumMember(Value = @"BlissWorld")]
        BlissWorld = 42,

        [System.Runtime.Serialization.EnumMember(Value = @"Fromuthpickleball")]
        Fromuthpickleball = 43,

        [System.Runtime.Serialization.EnumMember(Value = @"TrueValue")]
        TrueValue = 44,

        [System.Runtime.Serialization.EnumMember(Value = @"Qvc")]
        Qvc = 45,

        [System.Runtime.Serialization.EnumMember(Value = @"Coravin")]
        Coravin = 46,

        [System.Runtime.Serialization.EnumMember(Value = @"RoomsToGo")]
        RoomsToGo = 47,

        [System.Runtime.Serialization.EnumMember(Value = @"Nfm")]
        Nfm = 48,

        [System.Runtime.Serialization.EnumMember(Value = @"Gnc")]
        Gnc = 49,

        [System.Runtime.Serialization.EnumMember(Value = @"Honest")]
        Honest = 50,

        [System.Runtime.Serialization.EnumMember(Value = @"Abercrombie")]
        Abercrombie = 51,

        [System.Runtime.Serialization.EnumMember(Value = @"HamiltonBeach")]
        HamiltonBeach = 52,

        [System.Runtime.Serialization.EnumMember(Value = @"SharkClean")]
        SharkClean = 53,

        [System.Runtime.Serialization.EnumMember(Value = @"NinjaKitchen")]
        NinjaKitchen = 54,

        [System.Runtime.Serialization.EnumMember(Value = @"Ikea")]
        Ikea = 55,

        [System.Runtime.Serialization.EnumMember(Value = @"Clinique")]
        Clinique = 56,

        [System.Runtime.Serialization.EnumMember(Value = @"Levi")]
        Levi = 57,

        [System.Runtime.Serialization.EnumMember(Value = @"DripDrop")]
        DripDrop = 58,

        [System.Runtime.Serialization.EnumMember(Value = @"Complex")]
        Complex = 59,

        [System.Runtime.Serialization.EnumMember(Value = @"Gymshark")]
        Gymshark = 60,

        [System.Runtime.Serialization.EnumMember(Value = @"Bikini")]
        Bikini = 61,

        [System.Runtime.Serialization.EnumMember(Value = @"TomFord")]
        TomFord = 62,

        [System.Runtime.Serialization.EnumMember(Value = @"Solerebels")]
        Solerebels = 63,

        [System.Runtime.Serialization.EnumMember(Value = @"EsteeLauder")]
        EsteeLauder = 64,

        [System.Runtime.Serialization.EnumMember(Value = @"SeraLabsHealth")]
        SeraLabsHealth = 65,

        [System.Runtime.Serialization.EnumMember(Value = @"BigStar")]
        BigStar = 66,

        [System.Runtime.Serialization.EnumMember(Value = @"Kendrascott")]
        Kendrascott = 67,

        [System.Runtime.Serialization.EnumMember(Value = @"Philosophy")]
        Philosophy = 68,

        [System.Runtime.Serialization.EnumMember(Value = @"HugoBoss")]
        HugoBoss = 69,

        [System.Runtime.Serialization.EnumMember(Value = @"Jomalone")]
        Jomalone = 70,

        [System.Runtime.Serialization.EnumMember(Value = @"Hanes")]
        Hanes = 71,

        [System.Runtime.Serialization.EnumMember(Value = @"Champion")]
        Champion = 72,

        [System.Runtime.Serialization.EnumMember(Value = @"Bali")]
        Bali = 73,

        [System.Runtime.Serialization.EnumMember(Value = @"HudaBeauty")]
        HudaBeauty = 74,

        [System.Runtime.Serialization.EnumMember(Value = @"Highlights")]
        Highlights = 75,

        [System.Runtime.Serialization.EnumMember(Value = @"Lushusa")]
        Lushusa = 76,

        [System.Runtime.Serialization.EnumMember(Value = @"ClarinsUsa")]
        ClarinsUsa = 77,

        [System.Runtime.Serialization.EnumMember(Value = @"Sonomacutrer")]
        Sonomacutrer = 78,

        [System.Runtime.Serialization.EnumMember(Value = @"Lancome")]
        Lancome = 79,

        [System.Runtime.Serialization.EnumMember(Value = @"Chiccousa")]
        Chiccousa = 80,

        [System.Runtime.Serialization.EnumMember(Value = @"WorldMarket")]
        WorldMarket = 81,

        [System.Runtime.Serialization.EnumMember(Value = @"Michaelkors")]
        Michaelkors = 82,

        [System.Runtime.Serialization.EnumMember(Value = @"Bic")]
        Bic = 83,

        [System.Runtime.Serialization.EnumMember(Value = @"InstantBrands")]
        InstantBrands = 84,

        [System.Runtime.Serialization.EnumMember(Value = @"ReserveBar")]
        ReserveBar = 85,

        [System.Runtime.Serialization.EnumMember(Value = @"VibeBodyCare")]
        VibeBodyCare = 86,

        [System.Runtime.Serialization.EnumMember(Value = @"ShopTy")]
        ShopTy = 87,

        [System.Runtime.Serialization.EnumMember(Value = @"LesliesPool")]
        LesliesPool = 88,

        [System.Runtime.Serialization.EnumMember(Value = @"Lululemon")]
        Lululemon = 89,

        [System.Runtime.Serialization.EnumMember(Value = @"WestElm")]
        WestElm = 90,

        [System.Runtime.Serialization.EnumMember(Value = @"Lids")]
        Lids = 91,

        [System.Runtime.Serialization.EnumMember(Value = @"GardenOfLife")]
        GardenOfLife = 92,

        [System.Runtime.Serialization.EnumMember(Value = @"Taylormadegolf")]
        Taylormadegolf = 93,

        [System.Runtime.Serialization.EnumMember(Value = @"Flightscope")]
        Flightscope = 94,

        [System.Runtime.Serialization.EnumMember(Value = @"NewBalance")]
        NewBalance = 95,

        [System.Runtime.Serialization.EnumMember(Value = @"PotteryBarn")]
        PotteryBarn = 96,

        [System.Runtime.Serialization.EnumMember(Value = @"PotteryBarnKids")]
        PotteryBarnKids = 97,

        [System.Runtime.Serialization.EnumMember(Value = @"PotteryBarnTeen")]
        PotteryBarnTeen = 98,

        [System.Runtime.Serialization.EnumMember(Value = @"WilliamsSonoma")]
        WilliamsSonoma = 99,

        [System.Runtime.Serialization.EnumMember(Value = @"MarkAndGraham")]
        MarkAndGraham = 100,

        [System.Runtime.Serialization.EnumMember(Value = @"Underarmour")]
        Underarmour = 101,

        [System.Runtime.Serialization.EnumMember(Value = @"UvaBookStores")]
        UvaBookStores = 102,

        [System.Runtime.Serialization.EnumMember(Value = @"Bose")]
        Bose = 103,

        [System.Runtime.Serialization.EnumMember(Value = @"BattleSports")]
        BattleSports = 104,

        [System.Runtime.Serialization.EnumMember(Value = @"Jcpenney")]
        Jcpenney = 105,

        [System.Runtime.Serialization.EnumMember(Value = @"Etsy")]
        Etsy = 106,

        [System.Runtime.Serialization.EnumMember(Value = @"LacrosseUnlimited")]
        LacrosseUnlimited = 107,

        [System.Runtime.Serialization.EnumMember(Value = @"Staples")]
        Staples = 108,

        [System.Runtime.Serialization.EnumMember(Value = @"Academy")]
        Academy = 109,

        [System.Runtime.Serialization.EnumMember(Value = @"Champssports")]
        Champssports = 110,

        [System.Runtime.Serialization.EnumMember(Value = @"Usopenshop")]
        Usopenshop = 111,

        [System.Runtime.Serialization.EnumMember(Value = @"HalfPriceBooks")]
        HalfPriceBooks = 112,

        [System.Runtime.Serialization.EnumMember(Value = @"BathAndBodyWorks")]
        BathAndBodyWorks = 113,

        [System.Runtime.Serialization.EnumMember(Value = @"Ralphlauren")]
        Ralphlauren = 114,

        [System.Runtime.Serialization.EnumMember(Value = @"CampingWorld")]
        CampingWorld = 115,

        [System.Runtime.Serialization.EnumMember(Value = @"Sportsdirect")]
        Sportsdirect = 116,

        [System.Runtime.Serialization.EnumMember(Value = @"Anastasiabeverlyhills")]
        Anastasiabeverlyhills = 117,

        [System.Runtime.Serialization.EnumMember(Value = @"Chanel")]
        Chanel = 118,

        [System.Runtime.Serialization.EnumMember(Value = @"Yeti")]
        Yeti = 119,

        [System.Runtime.Serialization.EnumMember(Value = @"Crayola")]
        Crayola = 120,

        [System.Runtime.Serialization.EnumMember(Value = @"Vans")]
        Vans = 121,

        [System.Runtime.Serialization.EnumMember(Value = @"Lacoste")]
        Lacoste = 122,

        [System.Runtime.Serialization.EnumMember(Value = @"PoshMark")]
        PoshMark = 123,

        [System.Runtime.Serialization.EnumMember(Value = @"FloorAndDecor")]
        FloorAndDecor = 124,

        [System.Runtime.Serialization.EnumMember(Value = @"Overstock")]
        Overstock = 125,

        [System.Runtime.Serialization.EnumMember(Value = @"Bloomingdales")]
        Bloomingdales = 126,

        [System.Runtime.Serialization.EnumMember(Value = @"AmericanEagle")]
        AmericanEagle = 127,

        [System.Runtime.Serialization.EnumMember(Value = @"Tradesy")]
        Tradesy = 128,

        [System.Runtime.Serialization.EnumMember(Value = @"AceHardware")]
        AceHardware = 129,

        [System.Runtime.Serialization.EnumMember(Value = @"Fossil")]
        Fossil = 130,

        [System.Runtime.Serialization.EnumMember(Value = @"Guess")]
        Guess = 131,

        [System.Runtime.Serialization.EnumMember(Value = @"ChildrenIsPlace")]
        ChildrenIsPlace = 132,

        [System.Runtime.Serialization.EnumMember(Value = @"Cabelas")]
        Cabelas = 133,

        [System.Runtime.Serialization.EnumMember(Value = @"ChineseLaundry")]
        ChineseLaundry = 134,

        [System.Runtime.Serialization.EnumMember(Value = @"JanieAndJack")]
        JanieAndJack = 135,

        [System.Runtime.Serialization.EnumMember(Value = @"Backcountry")]
        Backcountry = 136,

        [System.Runtime.Serialization.EnumMember(Value = @"Forever21")]
        Forever21 = 137,

        [System.Runtime.Serialization.EnumMember(Value = @"Tyler")]
        Tyler = 138,

        [System.Runtime.Serialization.EnumMember(Value = @"ShopifyApp")]
        ShopifyApp = 139,

        [System.Runtime.Serialization.EnumMember(Value = @"WooCommerceApp")]
        WooCommerceApp = 140,

        [System.Runtime.Serialization.EnumMember(Value = @"BigCommerceApp")]
        BigCommerceApp = 141,

        [System.Runtime.Serialization.EnumMember(Value = @"MagentoApp")]
        MagentoApp = 142,

        [System.Runtime.Serialization.EnumMember(Value = @"SquareSpaceApp")]
        SquareSpaceApp = 143,

        [System.Runtime.Serialization.EnumMember(Value = @"WixApp")]
        WixApp = 144,

        [System.Runtime.Serialization.EnumMember(Value = @"PrestaShopApp")]
        PrestaShopApp = 145,

        [System.Runtime.Serialization.EnumMember(Value = @"ShopwareApp")]
        ShopwareApp = 146,

    }

    /// <summary>
    /// Api error
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiError : System.ComponentModel.INotifyPropertyChanged
    {
        private string? _message = default!;

        /// <summary>
        /// Error message
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("message")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Message
        {
            get { return _message; }

            set
            {
                if (_message != value)
                {
                    _message = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Cart item list
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CartItemPagingResponse : PagingResponseOfCartItemGet
    {

    }

    /// <summary>
    /// Paged data response
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PagingResponseOfCartItemGet : System.ComponentModel.INotifyPropertyChanged
    {
        private System.Collections.Generic.ICollection<CartItemGet>? _data = default!;
        private string? _nextPage = default!;
        private int? _pageSize = default!;
        private string? _nextPageToken = default!;

        /// <summary>
        /// Paged data
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<CartItemGet>? Data
        {
            get { return _data; }

            set
            {
                if (_data != value)
                {
                    _data = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Next page url
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nextPage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? NextPage
        {
            get { return _nextPage; }

            set
            {
                if (_nextPage != value)
                {
                    _nextPage = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Page size
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("pageSize")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? PageSize
        {
            get { return _pageSize; }

            set
            {
                if (_pageSize != value)
                {
                    _pageSize = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Current next page token
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nextPageToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? NextPageToken
        {
            get { return _nextPageToken; }

            set
            {
                if (_nextPageToken != value)
                {
                    _nextPageToken = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Sorting page direction
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum EnPageDirection
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Desc")]
        Desc = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"Asc")]
        Asc = 1,

    }

    /// <summary>
    /// Result with guid id
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ResultGuid : System.ComponentModel.INotifyPropertyChanged
    {
        private System.Guid? _id = default!;

        /// <summary>
        /// ID
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Id
        {
            get { return _id; }

            set
            {
                if (_id != value)
                {
                    _id = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Cart item
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CartItemPatch : OptionalPropertiesRequest
    {
        private string? _usItemId = default!;
        private string? _seller = default!;
        private string? _productId = default!;
        private string? _name = default!;
        private string? _description = default!;
        private string? _url = default!;
        private System.Collections.Generic.ICollection<string>? _imagesUrls = default!;
        private string? _smallImageUrl = default!;
        private System.Collections.Generic.ICollection<Variant>? _variants = default!;
        private System.Collections.Generic.ICollection<VariantCategory>? _variantCategories = default!;
        private PriceData? _priceInfo = default!;
        private bool? _available = default!;
        private EnPlatformType? _platform = default!;
        private string? _platformData = default!;
        private System.Collections.Generic.ICollection<string>? _productCategories = default!;
        private string? _gtin = default!;
        private string? _mpn = default!;
        private string? _brand = default!;

        /// <summary>
        /// Unique item id on target e-commerce platform
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("usItemId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? UsItemId
        {
            get { return _usItemId; }

            set
            {
                if (_usItemId != value)
                {
                    _usItemId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Seller host on target e-commerce platform
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("seller")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Seller
        {
            get { return _seller; }

            set
            {
                if (_seller != value)
                {
                    _seller = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product id on target e-commerce platform
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? ProductId
        {
            get { return _productId; }

            set
            {
                if (_productId != value)
                {
                    _productId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Name
        {
            get { return _name; }

            set
            {
                if (_name != value)
                {
                    _name = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product description 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("description")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Description
        {
            get { return _description; }

            set
            {
                if (_description != value)
                {
                    _description = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Url of product page on target e-commerce platform 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("url")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Url
        {
            get { return _url; }

            set
            {
                if (_url != value)
                {
                    _url = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Urls of product images
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("imagesUrls")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string>? ImagesUrls
        {
            get { return _imagesUrls; }

            set
            {
                if (_imagesUrls != value)
                {
                    _imagesUrls = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Small image url to display on product thumb
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("smallImageUrl")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? SmallImageUrl
        {
            get { return _smallImageUrl; }

            set
            {
                if (_smallImageUrl != value)
                {
                    _smallImageUrl = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// "Selected variants for target product"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variants")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<Variant>? Variants
        {
            get { return _variants; }

            set
            {
                if (_variants != value)
                {
                    _variants = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// "Available variants for target product grouped by categories"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("variantCategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<VariantCategory>? VariantCategories
        {
            get { return _variantCategories; }

            set
            {
                if (_variantCategories != value)
                {
                    _variantCategories = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// "Product price data"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("priceInfo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public PriceData? PriceInfo
        {
            get { return _priceInfo; }

            set
            {
                if (_priceInfo != value)
                {
                    _priceInfo = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// "Product availability"
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("available")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? Available
        {
            get { return _available; }

            set
            {
                if (_available != value)
                {
                    _available = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Target e-commerce platform name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("platform")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        [System.Text.Json.Serialization.JsonConverter(typeof(System.Text.Json.Serialization.JsonStringEnumConverter))]
        public EnPlatformType? Platform
        {
            get { return _platform; }

            set
            {
                if (_platform != value)
                {
                    _platform = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Serialized specific platform product data usually in JSON format
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("platformData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? PlatformData
        {
            get { return _platformData; }

            set
            {
                if (_platformData != value)
                {
                    _platformData = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Categories in which the product belongs
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("productCategories")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string>? ProductCategories
        {
            get { return _productCategories; }

            set
            {
                if (_productCategories != value)
                {
                    _productCategories = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// International marking code. UPC, GTIN-12, GTIN-13, GTIN-14 or ISBN
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("gtin")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Gtin
        {
            get { return _gtin; }

            set
            {
                if (_gtin != value)
                {
                    _gtin = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product manufacturer code
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mpn")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Mpn
        {
            get { return _mpn; }

            set
            {
                if (_mpn != value)
                {
                    _mpn = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Product brand
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("brand")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Brand
        {
            get { return _brand; }

            set
            {
                if (_brand != value)
                {
                    _brand = value;
                    RaisePropertyChanged();
                }
            }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public abstract partial class OptionalPropertiesRequest : System.ComponentModel.INotifyPropertyChanged
    {

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Multicart offer
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OfferGet : OfferBody
    {
        private System.Guid? _id = default!;
        private string? _groupName = default!;
        private System.Collections.Generic.ICollection<CartItemGet>? _cartItems = default!;

        /// <summary>
        /// Id of offer
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Id
        {
            get { return _id; }

            set
            {
                if (_id != value)
                {
                    _id = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer group name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("groupName")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? GroupName
        {
            get { return _groupName; }

            set
            {
                if (_groupName != value)
                {
                    _groupName = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer cart items
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cartItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<CartItemGet>? CartItems
        {
            get { return _cartItems; }

            set
            {
                if (_cartItems != value)
                {
                    _cartItems = value;
                    RaisePropertyChanged();
                }
            }
        }

    }

    /// <summary>
    /// Multicart offer
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OfferBody : System.ComponentModel.INotifyPropertyChanged
    {
        private System.Guid? _groupId = default!;
        private string? _name = default!;
        private OfferInfo? _offerInfo = default!;

        /// <summary>
        /// Offer group id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("groupId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? GroupId
        {
            get { return _groupId; }

            set
            {
                if (_groupId != value)
                {
                    _groupId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Name
        {
            get { return _name; }

            set
            {
                if (_name != value)
                {
                    _name = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer info
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("offerInfo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public OfferInfo? OfferInfo
        {
            get { return _offerInfo; }

            set
            {
                if (_offerInfo != value)
                {
                    _offerInfo = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Offer additional data
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OfferInfo : System.ComponentModel.INotifyPropertyChanged
    {
        private DiscountCoupons? _discountCoupons = default!;
        private bool? _errorReported = default!;
        private System.DateTimeOffset? _validUntil = default!;
        private bool? _customLink = default!;
        private string? _link = default!;
        private System.Collections.Generic.ICollection<OfferLinkData>? _shareLinks = default!;
        private System.Collections.Generic.ICollection<string>? _tags = default!;
        private double? _commissionFee = default!;
        private bool? _useGoogleAnalytics = default!;
        private string? _googleTrackingId = default!;
        private bool? _useExternalCheckout = default!;

        /// <summary>
        /// Discount coupon info 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("discountCoupons")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public DiscountCoupons? DiscountCoupons
        {
            get { return _discountCoupons; }

            set
            {
                if (_discountCoupons != value)
                {
                    _discountCoupons = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer error notification flag
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("errorReported")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? ErrorReported
        {
            get { return _errorReported; }

            set
            {
                if (_errorReported != value)
                {
                    _errorReported = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer lifetime. Maybe empty
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("validUntil")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.DateTimeOffset? ValidUntil
        {
            get { return _validUntil; }

            set
            {
                if (_validUntil != value)
                {
                    _validUntil = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer use custom url as https://www.multicartshop.com/custom-url
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("customLink")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? CustomLink
        {
            get { return _customLink; }

            set
            {
                if (_customLink != value)
                {
                    _customLink = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer custom url as https://www.multicartshop.com/custom-url
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Link
        {
            get { return _link; }

            set
            {
                if (_link != value)
                {
                    _link = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer relationships with influencers 
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("shareLinks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<OfferLinkData>? ShareLinks
        {
            get { return _shareLinks; }

            set
            {
                if (_shareLinks != value)
                {
                    _shareLinks = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer tags
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("tags")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string>? Tags
        {
            get { return _tags; }

            set
            {
                if (_tags != value)
                {
                    _tags = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer brand commission fee
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("commissionFee")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public double? CommissionFee
        {
            get { return _commissionFee; }

            set
            {
                if (_commissionFee != value)
                {
                    _commissionFee = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Use google analytics tracking for offer
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("useGoogleAnalytics")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? UseGoogleAnalytics
        {
            get { return _useGoogleAnalytics; }

            set
            {
                if (_useGoogleAnalytics != value)
                {
                    _useGoogleAnalytics = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Google analitics tracking id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("googleTrackingId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? GoogleTrackingId
        {
            get { return _googleTrackingId; }

            set
            {
                if (_googleTrackingId != value)
                {
                    _googleTrackingId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer using external link checkout flow
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("useExternalCheckout")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? UseExternalCheckout
        {
            get { return _useExternalCheckout; }

            set
            {
                if (_useExternalCheckout != value)
                {
                    _useExternalCheckout = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Discount coupons info
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DiscountCoupons : System.ComponentModel.INotifyPropertyChanged
    {
        private System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, DiscountCoupon>>? _coupons = default!;

        /// <summary>
        /// Dictionary by Platform guid key, then Dictionary by Seller key
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("coupons")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.IDictionary<string, System.Collections.Generic.IDictionary<string, DiscountCoupon>>? Coupons
        {
            get { return _coupons; }

            set
            {
                if (_coupons != value)
                {
                    _coupons = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DiscountCoupon : System.ComponentModel.INotifyPropertyChanged
    {
        private string? _seller = default!;
        private string? _coupon = default!;

        [System.Text.Json.Serialization.JsonPropertyName("seller")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Seller
        {
            get { return _seller; }

            set
            {
                if (_seller != value)
                {
                    _seller = value;
                    RaisePropertyChanged();
                }
            }
        }

        [System.Text.Json.Serialization.JsonPropertyName("coupon")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Coupon
        {
            get { return _coupon; }

            set
            {
                if (_coupon != value)
                {
                    _coupon = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Offer relationship
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OfferLinkData : System.ComponentModel.INotifyPropertyChanged
    {
        private string? _link = default!;
        private string? _influencer = default!;

        [System.Text.Json.Serialization.JsonPropertyName("link")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Link
        {
            get { return _link; }

            set
            {
                if (_link != value)
                {
                    _link = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Influencer id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("influencer")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Influencer
        {
            get { return _influencer; }

            set
            {
                if (_influencer != value)
                {
                    _influencer = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Offer list
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OfferPagingResponse : PagingResponseOfOfferGet
    {

    }

    /// <summary>
    /// Paged data response
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PagingResponseOfOfferGet : System.ComponentModel.INotifyPropertyChanged
    {
        private System.Collections.Generic.ICollection<OfferGet>? _data = default!;
        private string? _nextPage = default!;
        private int? _pageSize = default!;
        private string? _nextPageToken = default!;

        /// <summary>
        /// Paged data
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("data")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<OfferGet>? Data
        {
            get { return _data; }

            set
            {
                if (_data != value)
                {
                    _data = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Next page url
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nextPage")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? NextPage
        {
            get { return _nextPage; }

            set
            {
                if (_nextPage != value)
                {
                    _nextPage = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Page size
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("pageSize")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public int? PageSize
        {
            get { return _pageSize; }

            set
            {
                if (_pageSize != value)
                {
                    _pageSize = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Current next page token
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("nextPageToken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? NextPageToken
        {
            get { return _nextPageToken; }

            set
            {
                if (_nextPageToken != value)
                {
                    _nextPageToken = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiErrorOfCreateOfferLimitReachedErrorData : ApiError
    {
        private CreateOfferLimitReachedErrorData? _errorData = default!;

        [System.Text.Json.Serialization.JsonPropertyName("errorData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public CreateOfferLimitReachedErrorData? ErrorData
        {
            get { return _errorData; }

            set
            {
                if (_errorData != value)
                {
                    _errorData = value;
                    RaisePropertyChanged();
                }
            }
        }

    }

    /// <summary>
    /// Create offer error data for user limit reached
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateOfferLimitReachedErrorData : System.ComponentModel.INotifyPropertyChanged
    {
        private bool? _limitReached = default!;

        /// <summary>
        /// User limit reached
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("limitReached")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? LimitReached
        {
            get { return _limitReached; }

            set
            {
                if (_limitReached != value)
                {
                    _limitReached = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class ApiErrorOfCreateOfferConflictErrorData : ApiError
    {
        private CreateOfferConflictErrorData? _errorData = default!;

        [System.Text.Json.Serialization.JsonPropertyName("errorData")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public CreateOfferConflictErrorData? ErrorData
        {
            get { return _errorData; }

            set
            {
                if (_errorData != value)
                {
                    _errorData = value;
                    RaisePropertyChanged();
                }
            }
        }

    }

    /// <summary>
    /// Create offer error data for conflict
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateOfferConflictErrorData : System.ComponentModel.INotifyPropertyChanged
    {
        private System.Collections.Generic.ICollection<string>? _notUniqueLinks = default!;
        private bool? _mainLinkAlreadyTaken = default!;
        private bool? _idOfferLinkCollision = default!;

        /// <summary>
        /// Not unique links in offer
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("notUniqueLinks")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<string>? NotUniqueLinks
        {
            get { return _notUniqueLinks; }

            set
            {
                if (_notUniqueLinks != value)
                {
                    _notUniqueLinks = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Main link already
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("mainLinkAlreadyTaken")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? MainLinkAlreadyTaken
        {
            get { return _mainLinkAlreadyTaken; }

            set
            {
                if (_mainLinkAlreadyTaken != value)
                {
                    _mainLinkAlreadyTaken = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Id offer link collision
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("idOfferLinkCollision")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public bool? IdOfferLinkCollision
        {
            get { return _idOfferLinkCollision; }

            set
            {
                if (_idOfferLinkCollision != value)
                {
                    _idOfferLinkCollision = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Multicart offer
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OfferPost : OfferBody
    {
        private System.Collections.Generic.ICollection<CartItemPost>? _cartItems = default!;

        /// <summary>
        /// Offer cart items
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cartItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<CartItemPost>? CartItems
        {
            get { return _cartItems; }

            set
            {
                if (_cartItems != value)
                {
                    _cartItems = value;
                    RaisePropertyChanged();
                }
            }
        }

    }

    /// <summary>
    /// Cart item
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CartItemPost : System.ComponentModel.INotifyPropertyChanged
    {
        private System.Guid? _id = default!;

        /// <summary>
        /// Unique id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("id")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? Id
        {
            get { return _id; }

            set
            {
                if (_id != value)
                {
                    _id = value;
                    RaisePropertyChanged();
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler? PropertyChanged;

        protected virtual void RaisePropertyChanged([System.Runtime.CompilerServices.CallerMemberName] string? propertyName = null)
        {
            var handler = PropertyChanged;
            if (handler != null)
                handler(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }

    /// <summary>
    /// Multicart offer
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class OfferPatch : OptionalPropertiesRequest
    {
        private System.Guid? _groupId = default!;
        private string? _name = default!;
        private OfferInfo? _offerInfo = default!;
        private System.Collections.Generic.ICollection<CartItemPost>? _cartItems = default!;

        /// <summary>
        /// Offer group id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("groupId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Guid? GroupId
        {
            get { return _groupId; }

            set
            {
                if (_groupId != value)
                {
                    _groupId = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer name
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("name")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? Name
        {
            get { return _name; }

            set
            {
                if (_name != value)
                {
                    _name = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer info
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("offerInfo")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public OfferInfo? OfferInfo
        {
            get { return _offerInfo; }

            set
            {
                if (_offerInfo != value)
                {
                    _offerInfo = value;
                    RaisePropertyChanged();
                }
            }
        }

        /// <summary>
        /// Offer cart items
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("cartItems")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public System.Collections.Generic.ICollection<CartItemPost>? CartItems
        {
            get { return _cartItems; }

            set
            {
                if (_cartItems != value)
                {
                    _cartItems = value;
                    RaisePropertyChanged();
                }
            }
        }

    }

    /// <summary>
    /// Cart item
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CartItemGetAdmin : CartItemGet
    {
        private string? _userId = default!;

        /// <summary>
        /// Multicart owner user id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("userId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? UserId
        {
            get { return _userId; }

            set
            {
                if (_userId != value)
                {
                    _userId = value;
                    RaisePropertyChanged();
                }
            }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CartItemBodyAdmin : CartItemBody
    {
        private string? _userId = default!;

        /// <summary>
        /// Multicart owner user id
        /// </summary>

        [System.Text.Json.Serialization.JsonPropertyName("userId")]

        [System.Text.Json.Serialization.JsonIgnore(Condition = System.Text.Json.Serialization.JsonIgnoreCondition.WhenWritingDefault)]   
        public string? UserId
        {
            get { return _userId; }

            set
            {
                if (_userId != value)
                {
                    _userId = value;
                    RaisePropertyChanged();
                }
            }
        }

    }


    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MulticartClientResponse
    {
        public int StatusCode { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public MulticartClientResponse(int statusCode, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers)
        {
            StatusCode = statusCode;
            Headers = headers;
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MulticartClientResponse<TResult> : MulticartClientResponse
    {
        public TResult Result { get; private set; }

        public MulticartClientResponse(int statusCode, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result)
            : base(statusCode, headers)
        {
            Result = result;
        }
    }


    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MulticartApiClientException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string? Response { get; private set; }

        public System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> Headers { get; private set; }

        public MulticartApiClientException(string message, int statusCode, string? response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, System.Exception? innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.17.0.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class MulticartApiClientException<TResult> : MulticartApiClientException
    {
        public TResult Result { get; private set; }

        public MulticartApiClientException(string message, int statusCode, string? response, System.Collections.Generic.IReadOnlyDictionary<string, System.Collections.Generic.IEnumerable<string>> headers, TResult result, System.Exception? innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016
#pragma warning restore 8603